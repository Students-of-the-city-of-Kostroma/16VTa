#include <stdio.h>
#include <iostream>
#define _CRT_SECURE_NO_WARNINGS
#define _CRT_SECURE_NO_DEPRECATE
#define _CRT_NONSTDC_NO_DEPRECATE
#pragma warning(disable : 4996)
#include <string.h>
using namespace std;
int prioritet(char a);


int otvet(char a[])
{
	

	float massint[100];
	int k = 0;
	float promzn = 0;
	float maspromzn;
	int delitel = 1;
	int sc;
	int znzpt = 0;
	float posleE;
	int stepenposleE;


	for (int d = 0; d <= m; d++)
	{

		if (vihod[d] >= '0' && vihod[d] <= '9')
		{
			promzn = promzn * 10 + (vihod[d] - '0');
		}




		else if (vihod[d] == '.')			//если точка
		{
			//cout << "d ==" << d << endl;	//проверка для d
			//int sc = d;
			//d++;
			//не знаю зачем, возможно можно как то упростить алгоритм 
			for (d; vihod[d + 1] != 'e' && vihod[d + 1] != razdelznak; d++)
			{
				//перескакиваем на след элемент, при первом входе в ФОР нужно чтоб перейти с точки на след элемент и начать вычисление
				//	cout << "d ==" << d << endl;  // еще одна проверочка
				znzpt = znzpt * 10;           //изначально znzpt = 0; умножает число на 10, чтобы в появившийся новый разряд десятков записать след число
				znzpt = (znzpt + vihod[d + 1] - '0'); // продолжение составления числа после зарятой записываем в появившийся новый разряд десятков считаное
				//следующее число, и преобразовываем это считаное число в int
				delitel = delitel * 10;			// высчитывается делитель
				cout << "Числа после запятой" << znzpt << endl;
				cout << "Делитель" << delitel << endl;
			}

			promzn = promzn *delitel + znzpt;  //к нашему числу до запятой, прибавляет все знаки после запятой (например, было число 12.32 
			//до выполнения действия promzn = 12  znzpt = 32;
			// действия мы получим promzn = 1232
			promzn = promzn / delitel;		    // ставит в нужное нам место запятую.
			cout << "Готовое разделенное число для записи в массив = " << promzn << endl;
		}


		

		else if (vihod[d] == 'e') // 
		{
			for (d; vihod[d + 1] != razdelznak; d++)
			{
				if (vihod[d + 1] == '+')
				{
					stepenposleE = vihod[d + 2] - '0';
					cout << "Степень после Е+  = " << stepenposleE << endl;
					posleE = pow(10, stepenposleE);
					cout << "Число возведенное в степень после  Е+ = " << posleE << endl;
					promzn = promzn*posleE;
					cout << "Число с расчетом Е+ для записи в массив = " << promzn << endl;
					sc++;
					d++;
				}
				else if (vihod[d + 1] == '-')
				{
					stepenposleE = vihod[d + 2] - '0';
					cout << "Степень после Е-  = " << stepenposleE << endl;
					posleE = 1 / pow(10, stepenposleE);
					cout << "Число возведенное в степень после  Е- = " << posleE << endl;
					cout << "Число в массиве до возведения в Е- = " << promzn << endl;
					promzn = promzn*posleE;
					cout << "Число с расчетом Е- для записи в массив = " << promzn << endl;
					sc++;
					d++;

				}
			}
		}
		//Вариант 1.0 дописываю для правильной работы скобок
		else if (vihod[d] == razdelznak && (vihod[d + 1] == '+' || vihod[d + 1] == '-' || vihod[d + 1] == '/' || vihod[d + 1] == '*') && (vihod[d - 1] == '+' || vihod[d - 1] == '-' || vihod[d - 1] == '/' || vihod[d - 1] == '*'))
		{
			cout << "Promzn чисто проверить 1.0 новое условие ============== " << promzn << endl;
		
		}
	
		else if (vihod[d] == razdelznak)
		{
			cout <<"Promzn чисто проверить ============== " <<promzn << endl;
			massint[k] = promzn;
			k++;
			promzn = 0;  //скидываем значения к первоначальным(ниже тоже самое происходит)
			znzpt = 0;
			posleE = 0;
			delitel = 1;
		}
		else if (vihod[d] == '+')
		{
			massint[k - 2] = massint[k - 2] + massint[k - 1];
			k--;
		}
		else if (vihod[d] == '-')
		{
			massint[k - 2] = massint[k - 2] - massint[k - 1];
			k--;
		}
		else if (vihod[d] == '*')
		{
			massint[k - 2] = massint[k - 2] * massint[k - 1];
			k--;
		}
		else if (vihod[d] == '/')
		{
			massint[k - 2] = massint[k - 2] / massint[k - 1];
			k--;
		}
	}
		cout << "Тест ИнтМассива k = " << massint[k] << endl;
		cout << "Тест ИнтМассива k-1 = " << massint[k-1] << endl;
		cout << "Тест ИнтМассива k-2 = " << massint[k-2] << endl;
		cout << "Тест ИнтМассива k-3 = " << massint[k - 3] << endl;

	for (int kk = 0; kk < k; kk++)
	{
		cout << "Тест ИнтМассива (Ответ) = " << massint[kk] << endl;
	}

}

int main()
{
	setlocale(LC_ALL, "Russian");
	char a[100];
	scanf("%s", a);

	otvet(a);

	system("pause");

	return 0;
}
